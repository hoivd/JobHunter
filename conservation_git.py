import os
import sys
from dotenv import load_dotenv
from github import Github
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.agents import initialize_agent, Tool
from langchain.memory import ConversationBufferMemory

# Load bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()
GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

# K·∫øt n·ªëi GitHub
g = Github(GITHUB_TOKEN)
repo = g.get_repo("hoivd/facebook_scraper")  # thay b·∫±ng repo b·∫°n mu·ªën

# ==== Tools GitHub ====
def read_file(path: str) -> str:
    try:
        file_content = repo.get_contents(path)
        return file_content.decoded_content.decode("utf-8")
    except Exception as e:
        return f"L·ªói khi ƒë·ªçc file {path}: {e}"

def list_files(path: str = "") -> str:
    try:
        contents = repo.get_contents(path)
        return "\n".join([c.path for c in contents])
    except Exception as e:
        return f"L·ªói khi li·ªát k√™ file {path}: {e}"

# ==== Tool StopConversation ====
def stop_conversation(_: str = "") -> str:
    """D·ª´ng cu·ªôc tr√≤ chuy·ªán khi ng∆∞·ªùi d√πng mu·ªën tho√°t"""
    print("ü§ñ Agent: C·∫£m ∆°n b·∫°n, m√¨nh s·∫Ω d·ª´ng ·ªü ƒë√¢y üëã")
    sys.exit(0)  # Tho√°t h·∫≥n ch∆∞∆°ng tr√¨nh

tools = [
    Tool(
        name="ReadFile",
        func=read_file,
        description="ƒê·ªçc n·ªôi dung file trong repo. Input l√† t√™n file, v√≠ d·ª•: README.md"
    ),
    Tool(
        name="ListFiles",
        func=list_files,
        description="Li·ªát k√™ file/folder trong repo. Input l√† th∆∞ m·ª•c, v√≠ d·ª•: N·∫øu th∆∞ m·ª•c g·ªëc th√¨ l√† '/' ho·∫∑c 'src'"
    ),
    Tool(
        name="StopConversation",
        func=stop_conversation,
        description="D√πng khi ng∆∞·ªùi d√πng n√≥i c·∫£m ∆°n, mu·ªën d·ª´ng, tho√°t ho·∫∑c k·∫øt th√∫c h·ªôi tho·∫°i."
    ),
]

# ==== LLM (Gemini) ====
llm = ChatGoogleGenerativeAI(
    model="gemini-2.5-flash",
    temperature=0.2,
    google_api_key=GOOGLE_API_KEY
)

# ==== Memory ====
memory = ConversationBufferMemory(
    memory_key="chat_history",
    return_messages=True
)

# ==== Conversational Agent ====
agent = initialize_agent(
    tools,
    llm,
    agent="conversational-react-description",
    memory=memory,
    verbose=True
)

# ==== V√≤ng l·∫∑p h·ªôi tho·∫°i ====
print("ü§ñ Agent s·∫µn s√†ng! B·∫°n c√≥ th·ªÉ chat, g√µ 'c·∫£m ∆°n' hay 'mu·ªën d·ª´ng' ƒë·ªÉ k·∫øt th√∫c.\n")

while True:
    query = input("B·∫°n: ")
    response = agent.run(query)
    print("ü§ñ Agent:", response)